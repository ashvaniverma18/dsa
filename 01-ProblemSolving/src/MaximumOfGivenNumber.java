public class MaximumOfGivenNumber {

    public static void main(String[] args) {
        System.out.println(solve(new int[]{50716, 68729, 22241, 70088, 65981, 49626, 20486, 12471, 31399, 63178, 24712,
                        87414, 22056, 3051, 90117, 33221, 27337, 98040, 64036, 46377, 93206, 16519, 3348, 33465, 58183,
                        64323, 76177, 14381, 56736, 86599, 5280, 8859, 80835, 58561, 33123, 65009, 38279, 39267, 44265,
                        82885, 86348, 14953, 56205, 29591, 10430, 30097, 14881, 43091, 31249, 55815, 43539, 66315, 28987,
                        72181, 57722, 47645, 29529, 50801, 77362, 89577, 49601, 58107, 15338, 99646, 36299, 29003, 29803,
                        27264, 93397, 20660, 20369, 29647, 55180, 79293, 71232, 96802, 13411, 19964, 11632, 46822, 91195,
                        44654, 3613, 79397, 51098, 46766, 30155, 50592, 46873, 98073, 84849, 51516, 80154, 80131, 66817,
                        33898, 34278, 70413, 258, 45265, 55850, 97185, 11241, 96310, 69895, 29767, 17547, 6527, 15620,
                        7339, 30360, 43013, 56929, 37205, 55436, 4117, 57062, 16972, 69306, 33738, 18249, 42662, 767,
                        85447, 3274, 11108, 8734, 17107, 51726, 54932, 54954, 9568, 51183, 39901, 31477, 60276, 13710,
                        89997, 39788, 7011, 60984, 14183, 20253, 28541, 96727, 48972, 74596, 43687, 76127, 73884, 67249,
                        89375, 39832, 17278, 17159, 92524, 17756, 97267, 71668, 59986, 4205, 18325, 90269, 82988, 38308,
                        95770, 38350, 86208, 38246, 80676, 47566, 59385, 40990, 87295, 17044, 34338, 80705, 44896, 19006,
                        24530, 70796, 8720, 40385, 89604, 11507, 14050, 61505, 10839, 41490, 98389, 94928, 7096, 36039,
                        22698, 11957, 56614, 63554, 60544, 39634, 16576, 692, 33262, 40999, 87913, 67094, 72902, 53826,
                        41089, 55635, 61198, 932, 95743, 29280, 42158, 83884, 26155, 39033, 30662, 68048, 80024, 81192,
                        68707, 2166, 1292, 6610, 45468, 12743, 42988, 39737, 32837, 79694, 58715, 58784, 15670, 61538,
                        34004, 34210, 14699, 24122, 54869, 53155, 42882, 17740, 12571, 23956, 41014, 9182, 93858, 3097,
                        85060, 23502, 35160, 90018, 34688, 75405, 67861, 54222, 27412, 79662, 38981, 60138, 89377, 39311,
                        20132, 86088, 84808, 26938, 55787, 14734, 56920, 43541, 22244, 74929, 46504, 75236, 18613, 97739,
                        73388, 6684, 96806, 82519, 64691, 48945, 47031, 87705, 82044, 33076, 71208, 48724, 58435, 77075,
                        601, 73635, 85929, 44805, 46238, 95700, 12851, 39431, 93490, 34439, 46453, 12164, 4708, 94939,
                        61080, 64515, 9040, 84715, 84158, 63848, 78099, 26926, 30580, 73926, 22576, 52950, 17834, 14332,
                        7120, 72410, 2169, 29034, 25463, 22589, 63416, 10866, 21888, 72386, 65121, 51679, 2235, 74499,
                        82015, 42120, 96759, 63306, 61907, 60590, 4657, 1925, 13819, 62089, 72834, 29574, 49010, 41382,
                        53790, 63311, 71735, 17621, 91511, 36530, 73955, 95484, 55575, 22348, 22380, 9332, 92411, 82032,
                        5486, 56183, 43041, 91360, 76378, 32570, 68405, 83298, 26896, 6296, 41259, 45117, 35154, 22984,
                        49611, 75755, 37605, 3153, 3890, 76206, 83099, 30692, 42497, 22148, 41946, 17945, 21726, 71867,
                        35031, 63077, 8937, 58316, 73786, 51573, 85447, 2247, 75453, 52619, 91218, 37184, 62208, 18962,
                        50453, 26121, 4811, 17972, 41164, 55041, 55119, 50517, 27892, 13879},
                3153));
    }
    public static int solve(int[] A, int B) {
        int start = 0;
        int end = A.length-1;
        int count =0;
        boolean bExist = false;
        while(start <= end) {
            if(!bExist && (A[start] == B || A[end] == B)){
                bExist = true;
            }

            if(A[start] > B) {
                count++;
            }
            if(start != end && A[end] >  B) {
                count++;
            }

            start++;
            end--;
        }
        if(bExist) {
            return count;
        }
        return  -1;
    }
}
